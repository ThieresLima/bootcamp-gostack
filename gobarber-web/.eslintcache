[{"/home/thieres/goStack/gobarber-web/src/App.tsx":"1","/home/thieres/goStack/gobarber-web/src/index.tsx":"2","/home/thieres/goStack/gobarber-web/src/styles/global.ts":"3","/home/thieres/goStack/gobarber-web/src/pages/SignIn/index.tsx":"4","/home/thieres/goStack/gobarber-web/src/pages/SignIn/styles.ts":"5","/home/thieres/goStack/gobarber-web/src/components/Input/styles.ts":"6","/home/thieres/goStack/gobarber-web/src/components/Input/index.tsx":"7","/home/thieres/goStack/gobarber-web/src/components/Button/index.tsx":"8","/home/thieres/goStack/gobarber-web/src/components/Button/styles.ts":"9","/home/thieres/goStack/gobarber-web/src/pages/SignUp/index.tsx":"10","/home/thieres/goStack/gobarber-web/src/pages/SignUp/styles.ts":"11","/home/thieres/goStack/gobarber-web/src/utils/getValidationErros.ts":"12","/home/thieres/goStack/gobarber-web/src/components/Tooltip/index.tsx":"13","/home/thieres/goStack/gobarber-web/src/components/Tooltip/styles.ts":"14","/home/thieres/goStack/gobarber-web/src/services/api.ts":"15","/home/thieres/goStack/gobarber-web/src/components/ToastContainer/index.tsx":"16","/home/thieres/goStack/gobarber-web/src/components/ToastContainer/styles.ts":"17","/home/thieres/goStack/gobarber-web/src/hooks/Auth.tsx":"18","/home/thieres/goStack/gobarber-web/src/hooks/Toast.tsx":"19","/home/thieres/goStack/gobarber-web/src/components/ToastContainer/Toast/styles.ts":"20","/home/thieres/goStack/gobarber-web/src/components/ToastContainer/Toast/index.tsx":"21"},{"size":325,"mtime":1607635230831,"results":"22","hashOfConfig":"23"},{"size":198,"mtime":1606157773950,"results":"24","hashOfConfig":"23"},{"size":468,"mtime":1606223229141,"results":"25","hashOfConfig":"23"},{"size":2437,"mtime":1607806588299,"results":"26","hashOfConfig":"23"},{"size":1240,"mtime":1606317516576,"results":"27","hashOfConfig":"23"},{"size":1113,"mtime":1606834140832,"results":"28","hashOfConfig":"23"},{"size":1594,"mtime":1607612301473,"results":"29","hashOfConfig":"23"},{"size":316,"mtime":1606310945328,"results":"30","hashOfConfig":"23"},{"size":381,"mtime":1606317538712,"results":"31","hashOfConfig":"23"},{"size":1876,"mtime":1606834615280,"results":"32","hashOfConfig":"33"},{"size":1240,"mtime":1606330527548,"results":"34","hashOfConfig":"35"},{"size":321,"mtime":1606513874312,"results":"36","hashOfConfig":"23"},{"size":355,"mtime":1606831226574,"results":"37","hashOfConfig":"23"},{"size":743,"mtime":1606834497900,"results":"38","hashOfConfig":"23"},{"size":116,"mtime":1607454081038,"results":"39","hashOfConfig":"23"},{"size":787,"mtime":1607976714250,"results":"40","hashOfConfig":"23"},{"size":162,"mtime":1607804363759,"results":"41","hashOfConfig":"23"},{"size":1654,"mtime":1607708683738,"results":"42","hashOfConfig":"23"},{"size":1424,"mtime":1607977059023,"results":"43","hashOfConfig":"23"},{"size":1264,"mtime":1607977350928,"results":"44","hashOfConfig":"23"},{"size":1180,"mtime":1607977398488,"results":"45","hashOfConfig":"23"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1grr2p0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37lwke",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xz2pnu",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/thieres/goStack/gobarber-web/src/App.tsx",[],["93","94","95","96","97"],"/home/thieres/goStack/gobarber-web/src/index.tsx",[],"/home/thieres/goStack/gobarber-web/src/styles/global.ts",[],["98","99","100","101","102"],"/home/thieres/goStack/gobarber-web/src/pages/SignIn/index.tsx",["103","104"],"import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport { useAuth } from '../../hooks/Auth';\nimport { useToast } from '../../hooks/Toast';\nimport getValidationErros from '../../utils/getValidationErros';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { user, signIn } = useAuth();\n  const { addToast, removeToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um email válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const erros = getValidationErros(err);\n\n          formRef.current?.setErrors(erros);\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais.',\n        });\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu logon</h1>\n\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"forgot\">Esqueci minha senha</a>\n        </Form>\n\n        <a href=\"login\">\n          <FiLogIn />\n          Criar conta\n        </a>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/thieres/goStack/gobarber-web/src/pages/SignIn/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/components/Input/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/components/Input/index.tsx",["105"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { useField } from '@unform/core';\n\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string; // tornando name obrigatório\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value', // document.querySelector('input').value\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/thieres/goStack/gobarber-web/src/components/Button/index.tsx",[],"/home/thieres/goStack/gobarber-web/src/components/Button/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/pages/SignUp/index.tsx",[],"/home/thieres/goStack/gobarber-web/src/pages/SignUp/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/utils/getValidationErros.ts",[],"/home/thieres/goStack/gobarber-web/src/components/Tooltip/index.tsx",[],"/home/thieres/goStack/gobarber-web/src/components/Tooltip/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/services/api.ts",[],"/home/thieres/goStack/gobarber-web/src/components/ToastContainer/index.tsx",[],"/home/thieres/goStack/gobarber-web/src/components/ToastContainer/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/hooks/Auth.tsx",["106","107"],"import React, { createContext, useCallback, useState, useContext } from 'react';\n\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n","/home/thieres/goStack/gobarber-web/src/hooks/Toast.tsx",[],"/home/thieres/goStack/gobarber-web/src/components/ToastContainer/Toast/styles.ts",[],"/home/thieres/goStack/gobarber-web/src/components/ToastContainer/Toast/index.tsx",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"117","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":26,"column":11,"nodeType":"126","messageId":"127","endLine":26,"endColumn":15},{"ruleId":"124","severity":1,"message":"128","line":27,"column":21,"nodeType":"126","messageId":"127","endLine":27,"endColumn":32},{"ruleId":"124","severity":1,"message":"129","line":25,"column":22,"nodeType":"126","messageId":"127","endLine":25,"endColumn":34},{"ruleId":"130","severity":1,"message":"131","line":7,"column":9,"nodeType":"132","messageId":"133","endLine":7,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":16,"column":9,"nodeType":"132","messageId":"133","endLine":16,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":16},"lines-around-directive",["134"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["134"],[],[],[],[],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'removeToast' is assigned a value but never used.","'defaultValue' is assigned a value but never used.","@typescript-eslint/ban-types","Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword","bannedTypeMessage","padding-line-between-statements"]